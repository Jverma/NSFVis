<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF:Small: Crash Scene Investigation - Debugging Programs that Fail Unexpectedly</AwardTitle>
    <AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>477833</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Computer systems are pervasive in all aspects of modern society. The&lt;br/&gt;software running on these systems, however, is difficult to implement&lt;br/&gt;correctly, and many failures occur after software is already released to&lt;br/&gt;the public. Unfortunately, these "post-deployment" failures are often&lt;br/&gt;the most difficult to fix. Failing runs are difficult to reproduce and&lt;br/&gt;analyze, as information about these failures is much more difficult and&lt;br/&gt;costly to obtain than failures occurring before software release. The&lt;br/&gt;PI's research will address this problem by making post-deployment&lt;br/&gt;failures more informative without sacrificing the end-user experience.&lt;br/&gt;&lt;br/&gt;Specifically, the project will tackle this problem on two fronts. First,&lt;br/&gt;deployed programs will perform low-cost, customizable tracing to enhance&lt;br/&gt;core memory dumps produced by failures. The project will investigate methods&lt;br/&gt;using both static and dynamic analysis to reduce the cost and improve&lt;br/&gt;the utility of traced information. Second, the enhanced memory dumps&lt;br/&gt;will require development of powerful new automated postmortem analyses&lt;br/&gt;to partially automate the process of debugging and program&lt;br/&gt;understanding. These analysis results can then be used to further&lt;br/&gt;inform useful tracing strategies via dynamic feedback from previous&lt;br/&gt;failures. Thus, information about a particular post-deployment fault&lt;br/&gt;could continually improve as more failures are observed. This automated&lt;br/&gt;iterative improvement of postmortem analyses has the potential to&lt;br/&gt;substantially reduce effort required to fix post-deployment faults, thus&lt;br/&gt;leading to faster and more accurate patches, resulting in greater&lt;br/&gt;reliability for the software we all rely upon in our daily lives.</AbstractNarration>
    <MinAmdLetterDate>08/06/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>08/06/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1420866</AwardID>
    <Investigator>
      <FirstName>Benjamin</FirstName>
      <LastName>Liblit</LastName>
      <EmailAddress>liblit@cs.wisc.edu</EmailAddress>
      <StartDate>08/06/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Wisconsin-Madison</Name>
      <CityName>MADISON</CityName>
      <ZipCode>537151218</ZipCode>
      <PhoneNumber>6082623822</PhoneNumber>
      <StreetAddress>21 North Park Street</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Wisconsin</StateName>
      <StateCode>WI</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
