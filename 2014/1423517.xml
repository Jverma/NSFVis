<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SEL: Small: Crowdsourced Software Engineering using Gamification</AwardTitle>
    <AwardEffectiveDate>09/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>475000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software engineering becomes more economically crucial every day, cutting across virtually all industries and scientific disciplines. Indeed, it has become so crucial that there are more tasks in software design, development, testing, maintenance, and analysis than our existing software engineering workforce can hope to accomplish. Various solutions have been proposed: for example, making programmers more productive, making programmers less error prone, training programmers more effectively, training programmers from a younger age, and so on. All innovations in this space can be characterized as either tools that assist skilled professionals or innovations that help train novices to be skilled professionals.&lt;br/&gt;&lt;br/&gt;A novel hybrid approach is proposed: Tools that assist skilled professionals while simultaneously training novices to be skilled professionals. In short, it is proposed to build interfaces that make it possible to crowdsource software engineering tasks. Such interfaces would assist skilled software engineers by allowing them to discharge some of their professional workload; and it would assist the unskilled crowd by paying them to become more skillful at solving software engineering problems. A principle technique proposed in crowdsourcing is gamification. Crowdsourcing will consist of two mutually dependent parts: 1) a gaming interface that allows human beings to leverage their natural problem-solving abilities on the engineering task at hand, and 2) automated pre-processing and post-processing algorithms for tasks such as decomposing the problem into smaller pieces, combining solutions, or helping with automated code generation.</AbstractNarration>
    <MinAmdLetterDate>06/13/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>06/13/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1423517</AwardID>
    <Investigator>
      <FirstName>William</FirstName>
      <LastName>Griswold</LastName>
      <EmailAddress>wgg@cs.ucsd.edu</EmailAddress>
      <StartDate>06/13/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Sorin</FirstName>
      <LastName>Lerner</LastName>
      <EmailAddress>lerner@cs.ucsd.edu</EmailAddress>
      <StartDate>06/13/2014</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-San Diego</Name>
      <CityName>La Jolla</CityName>
      <ZipCode>920930934</ZipCode>
      <PhoneNumber>8585344896</PhoneNumber>
      <StreetAddress>Office of Contract &amp; Grant Admin</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
