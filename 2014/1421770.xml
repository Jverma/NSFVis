<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Higher-order Contracts for Distributed Applications</AwardTitle>
    <AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2017</AwardExpirationDate>
    <AwardAmount>456365</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Distributed applications (such as web applications and cloud-based applications, where multiple computers cooperate to run the application) are becoming increasingly common. Given the amount of commercial activity and information handled by these distributed applications, it is important that these applications are correct, reliable, and efficient. However, many traditional tools and techniques for programmers cannot be used for distributed applications, making it difficult for programmers to write and debug distributed applications. This research explores the use of software contracts for distributed applications. Software contracts are specifications for software components that can be checked at run time (i.e., when the software executes). By developing techniques and tools to incorporate software contracts into distributed applications, this research has the potential to make it easier for programmers to write distributed applications that are correct, reliable, and efficient.&lt;br/&gt;&lt;br/&gt;Specifically, this research explores the use of higher-order contracts for distributed applications. Higher-order contracts are contracts for higher-order values such as first-class functions or objects. Higher-order contracts are a good fit for distributed applications as components in distributed applications are often higher-order, and higher-order contracts facilitate reasoning about dynamic composition of components (which is common in distributed settings such as web applications). Potential benefits of higher-order contracts include: (a) declarative specification of the functional behavior of components; (b) run-time enforcement of specifications; and (c) correct identification of faulty components. This research focuses on the efficient enforcement of behavioral contracts, the correct enforcement of contracts in the presence of untrustworthy distributed components, and the specification and enforcement of non-functional behaviors.</AbstractNarration>
    <MinAmdLetterDate>07/28/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>07/28/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1421770</AwardID>
    <Investigator>
      <FirstName>Stephen</FirstName>
      <LastName>Chong</LastName>
      <EmailAddress>chong@seas.harvard.edu</EmailAddress>
      <StartDate>07/28/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Harvard University</Name>
      <CityName>Cambridge</CityName>
      <ZipCode>021383846</ZipCode>
      <PhoneNumber>6174955501</PhoneNumber>
      <StreetAddress>1350 MASSACHUSETTS AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>8060</Code>
      <Text>Secure &amp;Trustworthy Cyberspace</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7434</Code>
      <Text>CNCI</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
  </Award>
</rootTag>
