<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SI2-SSE: Solving Polynomial Systems with PHCpack and phcpy</AwardTitle>
    <AwardEffectiveDate>10/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2017</AwardExpirationDate>
    <AwardAmount>464352</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05090000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Advanced CyberInfrastructure</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Daniel Katz</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Solving polynomial systems is a fundamental problem in mathematics with applications to various fields of science and engineering. The free and open source software PHCpack applies symbolic-numeric and polyhedral methods to solve polynomial systems. As a new interface to PHCpack written in the Python scripting language, phcpy improves the functionality of PHCpack. The implementation on parallel computers to compensate for the cost overhead of multi-precision arithmetic will enable scientists and engineers to solve larger systems faster and more accurately. A web server developed with phcpy will give anyone with an internet connection access to the developed software.&lt;br/&gt;&lt;br/&gt;The solvers in PHCpack apply homotopy continuation methods, blending symbolic-numeric with polyhedral algorithms. Numerical approximations to solutions are computed with Newton's method. Solutions are approximated symbolically by Puiseux series, which originate at initial forms defined by the Newton polytopes of the polynomials in the system. The design of phcpy gives a flexible interactive scripting interface, without sacrificing efficiency as compiled code in PHCpack is executed. The package phcpy will provide the tools for a scalable compute server to serve requests submitted to the web server. Multithreaded implementations on multicore processors accelerated by graphics processing units compensate for the cost overhead of double double and quad double arithmetic.</AbstractNarration>
    <MinAmdLetterDate>08/01/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>08/01/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1440534</AwardID>
    <Investigator>
      <FirstName>Jan</FirstName>
      <LastName>Verschelde</LastName>
      <EmailAddress>jan@math.uic.edu</EmailAddress>
      <StartDate>08/01/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Chicago</Name>
      <CityName>CHICAGO</CityName>
      <ZipCode>606127205</ZipCode>
      <PhoneNumber>3129962862</PhoneNumber>
      <StreetAddress>809 S MARSHFIELD RM 608</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>8004</Code>
      <Text>Software Institutes</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>1253</Code>
      <Text>OFFICE OF MULTIDISCIPLINARY AC</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>8069</Code>
      <Text>CDS&amp;E-MSS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7433</Code>
      <Text>CyberInfra Frmwrk 21st (CIF21)</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8005</Code>
      <Text>Scientific Software Elements</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8251</Code>
      <Text>Math Sci Innovation Incubator</Text>
    </ProgramReference>
  </Award>
</rootTag>
