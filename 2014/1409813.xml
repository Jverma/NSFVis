<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Medium: Stochastic Program Optimization</AwardTitle>
    <AwardEffectiveDate>07/15/2014</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2017</AwardExpirationDate>
    <AwardAmount>798159</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Title: SHF: Medium: Stochastic Program Optimization&lt;br/&gt;&lt;br/&gt;Virtually all software today is written by a combination of man and machine. Programmers write programs in programming languages that cannot be executed directly---these languages are designed to make the task of programming easier but cannot actually be run on a computer without a second step, where the human-written program is translated into a language that the machine can execute. Many changes to the program are made during this translation and especially important are optimizations that improve the performance of the final program on the hardware.&lt;br/&gt;&lt;br/&gt;Optimizing programs is a very complex process as there are many tradeoffs to be made in how to best use the limited resources of the target architecture. Traditionally this large problem is solved by breaking it into many small sub-problems, each of which focuses on a particular class of optimizations. In this project a very different alternative will be explored, using randomized search techniques to simultaneously consider all of the factors that go into producing the fastest possible code. Preliminary results have shown this approach can match or outperform production compilers for important short kernels; a focus of this research will be to try to scale these results up to full programs. The intellectual merit of this work is to reconsider how to perform compiler optimizations in light of the dramatic advances in computational power over the last several decades, a period in which the basic structure of compilers has hardly changed. The broader impact will be to demonstrate novel methods based on stochastic search, for producing, with a significant degree of automation, consistently much faster low-level code than today?s compilers. Thus, instead of compiler projects requiring years to produce reliable and high performance code for new architectures, stochastic optimizers that perform even better and with higher assurance can be built much more quickly by smaller teams of people. The techniques that will be developed will also be widely disseminated through massively online course portals.</AbstractNarration>
    <MinAmdLetterDate>07/09/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>07/09/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1409813</AwardID>
    <Investigator>
      <FirstName>Alexander</FirstName>
      <LastName>Aiken</LastName>
      <EmailAddress>aiken@cs.stanford.edu</EmailAddress>
      <StartDate>07/09/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Stanford University</Name>
      <CityName>Palo Alto</CityName>
      <ZipCode>943041212</ZipCode>
      <PhoneNumber>6507232300</PhoneNumber>
      <StreetAddress>3160 Porter Drive</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>6892</Code>
      <Text>CI REUSE</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7433</Code>
      <Text>CyberInfra Frmwrk 21st (CIF21)</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7924</Code>
      <Text>MEDIUM PROJECT</Text>
    </ProgramReference>
  </Award>
</rootTag>
