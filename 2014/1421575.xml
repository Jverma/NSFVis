<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Scalable and Maximal Predictive Runtime Verification for Concurrent Software</AwardTitle>
    <AwardEffectiveDate>08/01/2014</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2017</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The increasingly widespread use of multicore processors, whose computing power&lt;br/&gt;can only be unleashed by concurrent software, makes software defects, or bugs,&lt;br/&gt;become more common and labor-intensive to detect and repair. Runtime verification&lt;br/&gt;is a novel analysis approach that extracts information from a running system and&lt;br/&gt;uses it to detect and possibly react to observed behaviors satisfying or violating&lt;br/&gt;certain properties. Runtime verification scales well and avoids the complexity of&lt;br/&gt;traditional formal verification techniques. The techniques developed in this project &lt;br/&gt;will lead to robust production quality software by providing a scalable alternative &lt;br/&gt;to formal verification that provides many of the same guarantees for safety and security.&lt;br/&gt;&lt;br/&gt;This project aims to develop a scalable predictive runtime verification framework&lt;br/&gt;for concurrent software. A major technical advancement over prior art is that it&lt;br/&gt;not only detects errors when they occur at runtime, but is able to predict general&lt;br/&gt;security and safety property violations before they actually surface, preventing&lt;br/&gt;bad behaviors from happening by taking proper actions defined by the users. This&lt;br/&gt;project builds upon a sound and maximal causal model, hereby providing the provably&lt;br/&gt;maximum possible prediction power on the observed trace with no false alarms. The&lt;br/&gt;core research insight of this work is to explore the maximal causality of concurrency&lt;br/&gt;with automated constraint solving, which has been studied for decades and is becoming&lt;br/&gt;increasingly powerful.</AbstractNarration>
    <MinAmdLetterDate>07/02/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>07/02/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1421575</AwardID>
    <Investigator>
      <FirstName>Grigore</FirstName>
      <LastName>Rosu</LastName>
      <EmailAddress>grosu@illinois.edu</EmailAddress>
      <StartDate>07/02/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>6892</Code>
      <Text>CI REUSE</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7433</Code>
      <Text>CyberInfra Frmwrk 21st (CIF21)</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8206</Code>
      <Text>Formal Methods and Verification</Text>
    </ProgramReference>
  </Award>
</rootTag>
